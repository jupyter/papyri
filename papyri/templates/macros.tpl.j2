
{% macro render_paragraph(prgs) -%}
    {% for prg in prgs %}
        {{ render_myst(prg) }}
    {%- endfor %}
{%- endmacro %}

{% macro render_myst(obj) -%}
    {% set astJson = obj.to_dict() %}
    {% set key = uuid() %}
    <div style='border: solid thin cyan' id="{{ key }}"></div>
    <script>
      render("{{ key }}", {"type": "root", "children":[{{ astJson|tojson(indent=2) }}]})
    </script>
{%- endmacro %}



{% macro myst_directive(dve) -%}
    <pre class='not-implemented'>
.. {{dve.name}}:: {{dve.args}}
    {% for opt in dve.options %}
    {{ opt }}
    {% endfor %}
    {{dve.value|indent -}}
    </pre>
{% endmacro %}


{% macro render_II(obj) -%}

    {%- set type = obj.__class__.__name__ -%}
       {% if type[0] == 'M' %}
            {{ render_myst(obj) }}
       {%- elif type == 'MMystDirective' -%}
           {{ unreachable()}}
           {{myst_directive(obj)}}
       {%- elif type == 'DefList' -%}
          {{ render_myst(obj) }}
      {% elif type == 'Section' %}
          {{unreachable(obj)}}
           {% for item in obj %}
               {{ render_II(item) }}
           {% endfor %}
       {% elif type == 'FieldList' %}
           <dl> 
             {%- for item in obj.children %}
               <dt>
                {%- for x in item.name %}
                {{render_II(x)}}
                {% endfor %}
               </dt>
               <dd>
                {%- for x in item.body %}
                {{render_II(x)}}
                {% endfor %}
               </dd>
               {% endfor %}
           </dl>
       {% elif type in ['Options','Unimplemented','Comment','SubstitutionRef'] %}
           <pre class='not-implemented'>
            {{obj}}
           </pre>
        {%- elif type == 'Directive' -%}
             <!-- In theory we should never get Raw directive in final output --!>
             {{ render_myst(obj) }}
        {%- elif type in ('Math', 'Verbatim', 'MText','MEmphasis','MInlineCode', 'MLink') -%}
            {{ render_myst(obj) }}
       {% elif type == 'TocTree' %}
            {{ unreachable()}}
            {%if obj.children%}
                <details class='toctree' open>
                <summary><a class="toctree" href="{{url(obj.ref)}}">{{obj.title}}</a></summary>
                  <ul>
                   {% for c in obj.children %}
                       <li>{{render_II(c)}}</li>
                   {% endfor %}
                  </ul>
                </details>
            {% else %}
                <a class="toctree" href="{{url(obj.ref)}}">{{obj.title}}</a>
            {%endif%}
         
        {%- elif type in ['SubstitutionRef','Unimplemented','SubstitutionDef'] %}
            {{unimplemented(type, obj.__class__.__name__, obj.__dict__)}}
            <pre class='not-implemented'>{{obj}}</pre>
        {%- else %}
            {{unreachable(type, obj.__class__.__name__, obj.__dict__)}}
       {%- endif -%}
{%- endmacro %}



{%- macro example(entries) -%}
<span class='nsl'>{{'>>> ' -}}</span>{{ '' -}}
{%- for token in entries -%}
        {%- if token.link.__class__.__name__ == 'Link' -%}
            <a class="foo {{token.type}}" href="{{url(token.link.reference)}}">{{token.link.value}}</a>
        {%- else -%}
            {%- if token.link == '\n' -%}
                <br><span class='nsl'>...&nbsp;</span>
            {%- else -%}
                <span class="{{token.type}}">{{token.link}}</span>
            {%- endif -%}
        {%- endif -%}
    {%- endfor-%}
    {{-'\n'}}
{%- endmacro %}






