{% macro example(entries) -%}
    {{-blue('>>> ') -}}
    {%- for text, t_, cc in entries %}
       {%- if text == '\n' -%}
       {{"\n    ... "}}
       {%- else -%}
            {{white(text)}}
       {%- endif -%}
    {%- endfor-%}
{%- endmacro %}
{#--#}
{%- macro lines(self) -%}{%- for x in self %}
{{x.text}}
{%- endfor -%}
{%- endmacro %}

{% macro block(self) -%}
{{-lines(self.lines)}}
{%- if self.wh -%}
{{lines(self.wh)}}
{%- endif -%}
{%- if self.ind -%}
    {{-lines(self.ind)-}}
{%- endif -%}
{%- endmacro %}
{#--#}
{% macro block_paragraph(pgr) -%}
   |{%- for c in pgr.children -%}
   |    |{{-render_II(c) | trim-}}
   |{%- endfor -%}
{% endmacro %}

{% macro myst_directive(dve) -%}
{{blue("..")}}{{blue(dve.name)}}{{blue("::")}} {{dve.args}}
    {% if dve.options %}
      {{dve.options}}
    {% endif %}
    {% if dve.value %}
      {{dve.value}}
    {% endif %}
{% endmacro %}

{% macro render_list(objs) -%}
   |{% for item in objs -%}
   |{{- render_II(item) -}}
   |{% endfor -%}
{%- endmacro %}

{% macro render_II(obj) -%}
   |{%- if obj.__class__.__name__ == 'Paragraph' -%}
   |   |{{- block_paragraph(obj) -}}
   |{%- else -%}
   |{%- set type = obj.__class__.__name__ -%}
   |   |{%- if type in ('Math', 'Verbatim') -%}
   |   |   |{{unreachable(obj)}}
   |   |{%- elif type == 'MAdmonitionTitle' -%}
   |   |   |    ..
   |   |   |    {%- for item in obj.children %}
   |   |   |    |  {{render_II(item)|trim}}
   |   |   |    {%- endfor %}{{'::\n\n'}}
   |   |{%- elif type == 'MAdmonition' -%}{{'\n'}}
   |   |   |    {% for item in obj.children %}
   |   |   |    |{{render_II(item)|wordwrap|pad}}
   |   |   |    {%endfor %}
   |   |   |    |{{'\n'}}
   |   |{%- elif type == 'Directive' -%}
   |   |   |{{blue(':'+str(obj.domain)+':'+str(obj.role)+':`'+obj.value+'`')}}
   |   |{% elif type == 'MRoot' %}
   |   |{% for child in obj.children %}
   |   |   |{{ render_II(child)}}
   |   |{% endfor %}
   |   |{%- elif type == 'MMystDirective' -%}
   |   |   |{{'\n'}}{{myst_directive(obj)}}
   |   |{%- elif type == 'Verbatim' -%}
   |   |   |{{obj}}
   |   |{%- elif type == 'Paragraph' -%}
   |   |   |{{block_paragraph(obj)}}{{'\n'}}
   |   |{%- elif type == 'BlockVerbatim' -%}
   |   |   |{{obj.value}}
   |   |{%- elif type == 'MList' -%}
   |   |   |{{- render_list(obj.children) -}}{{'\n'}}
   |   |{%- elif type == 'MListItem' %}
   |   |   |  - {{- render_list(obj.children) -}}{{'\n'}}
   |   |{%- elif type == 'FieldList' -%}
   |   |   |{{render_list(obj.children)}}
   |   |{%- elif type == 'FieldListItem' %}
   |   |   |{{render_list(obj.name)}}
   |   |   |    {{render_list(obj.body)}}
   |   |{%- elif type == 'DefList' -%}
   |   |   |    {% for item in obj.children %}
   |   |   |    {{render_II(item.dt)}}
   |   |   |        {{render_list(item.dd)}}
   |   |   |    {%endfor %}
   |   |{%- elif type == 'DefListItem' %}
   |   |    {{-block(obj)-}}
   |   |{%- elif type == 'Example' %}
   |   |   |   |{{block(obj)}}
   |   |{%- elif type == 'MLink' %}
   |   |   |{{render_list(obj.children)}}
   |   |{%- elif type == 'MEmphasis' -%}
   |   |   |{{bold(render_list(obj.children))}}
   |   |{%- elif type == 'MStrong' -%}
   |   |   |{{bold(render_list(obj.children))}}
   |   |{%- elif type == 'MInlineMath' -%}
   |   |   |${{bold(obj.value)}}$
   |   |{%- elif type == 'MInlineCode' -%}
   |   |   |{{bold(obj.value)}}
   |   |{%- elif type == 'MText' -%}
   |   |   |{{obj.value}}
   |   |{%- elif type == 'Param'  -%}
   |   |   |{{obj.param}} : {{render_list(obj.desc)}}
   |   |{%- elif type in ('MParagraph','MBlockquote')  -%}
   |   |   |{{- render_list(obj.children) -}}
   |   |{% elif type == 'MCode' %}
   |   |   | {{obj.value|indent(8)}}
   |   |{% elif type == 'Parameters' %}
   |   |   {%- for item in obj.children %}
   |   |       {{ render_II(item) }}
   |   |   {%- endfor %}
   |   |{%- elif type == 'Section' %}
   |   |   {%- for item in obj %}
   |   |       {{- render_II(item) -}}
   |   |   {%- endfor %}
   |   |{%- elif type == 'Directive' -%}
   |   |   |:{{blue(obj.domain)}}:{{blue(obj.role)}}:`{{blue(obj.value)}}`
   |   |{%- elif type == 'Link' %}
   |   |   |{% if obj.kind=='local' %}
   |   |   |    {{-green(obj.value)-}}
   |   |   |{% elif obj.exists %}
   |   |   |    {{-blue(obj.value)-}}
   |   |   |{% else %}
   |   |   |    {{-unreachable(obj)}}
   |   |   |{% endif %}
   |   |{% elif type in ('MHeading','MParagraph') %}
   |   |   {%- for item in obj.children %}
   |   |       {{- render_II(item) -}}
   |   |   {%- endfor %}
   |   |{% elif type == 'MMath' %}
   |   |    ${{obj.value}}$
   |   |{% elif type == 'Verbatim' %}
   |   |    {{-yellow(obj.text)-}}
   |   |{% elif type == 'SubstitutionDef' %}
   |   |   SubstituionRefNotImpl
   |   |{% elif type == 'SubstitutionRef' %}
   |   |   SubstituionRefNotImpl
   |   |{% elif type == 'MComment' %}
   |   |{% elif type == 'Unimplemented' %}
   |   |   Unimplemented
   |   |{% elif type == 'MUnimpl' %}
   |   |   |{%- for item in obj.children %}
   |   |   |{{- render_II(item) -}}
   |   |   |{%- endfor %}
   |   |{%- else %}
   |   |   |Some B {{type}} Not implemented yet:
   |   |   |{{unreachable(obj, type)}}
   |   |{%- endif -%}
   |{%- endif -%}
{%- endmacro %}

{%- macro render_paragraph(prgs) -%}
   |{% if not prgs.__class__.__name__ ==  'list' %}
   |{{ unreachable('Not a list') }}
   |{% endif %}
   |{% for prg in prgs %}
   |   |   |{%- for obj in prg.children -%}
   |   |   |    {{- render_II(obj) -}}
   |   |   |{%- endfor -%}
   |{%- endfor -%}
{%- endmacro %}


{%- macro esc(val, stuff) -%}
[{{val}};m{{stuff}}[0;m
{%- endmacro %}

{%- macro ref(r) -%}
   {%- if r.exists -%}
   {{-blue(r.name)-}}
   {%- else -%}
   {{-red(r.name)-}}
   {%- endif -%}
{% endmacro -%}

{% if doc.signature %}
    |{{bold(underline(name))}}{{bold(underline(doc.signature.to_signature()))}}
{% endif %}

{% for section in doc.content if doc.content[section] %}
   |{%- if section in ['Summary', 'Extended Summary', 'Notes'] -%}
   |     |{{render_II(doc.content[section]) | wordwrap| trim}}
   |{% elif section in ['Signature'] %}
   |{{unreachable()}}
   |{% elif section in ['Examples'] %}
   |   |{% for data in doc.example_section_data %}
   |   |   |{%- set type = data.__class__.__name__ -%}
   |   |   |{% if type=='Fig' %}
   |   |   |        {{yellow("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")}}
   |   |   |        {{yellow("‚îÇ Image not included ‚îÇ")}}
   |   |   |        {{yellow("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò")}}
   |   |   |{% elif type=="Code" %}
   |   |   |    {{ example(data.entries) }}
   |   |   |    {{ data.out}}
   |   |   |{% else%}
   |   |   |    {{render_II(data)}}
   |   |   |{% endif -%}
   |   |{%- endfor %}
   |   |    {{underline("See:")}}
   |   |{{"        "}}
   |{% elif section in ['Parameters', 'Returns', 'Raises', 'Yields', 'Attributes',  'Warns', 'Other Parameters']  %}
   |   |{% if doc.content[section] %}
   |   |   |{{render_II(doc.content[section])| wordwrap |trim| indent(width=8)}}
   |   |{%- endif -%}
   |{% else %}
   |    {% if doc.content[section] %}
   |        {{render_II(doc.content[section])}}
   |    {% endif -%}
   |{% endif -%}
{% endfor%}
{% if doc.see_also %}
   |{{bold("See Also")}}
   |   |{{bold(render_II(doc.see_also))}}
{% endif %}

