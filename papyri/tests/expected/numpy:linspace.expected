



linspace(start, stop, num=None, endpoint=None, retstep=None, dtype=None, axis=None)

AttributesExtended Summary
Returns num evenly spaced samples, calculated over the interval [`start`,
stop].
The endpoint of the interval can optionally be excluded.


│..  versionchanged 1.16.0::
│
│Non-scalar :None:None:`start`
│and :None:None:`stop`
│are now supported.




│..  versionchanged 1.20.0::
│
│Values are rounded towards -inf instead of 0 when an integer dtype is
│specified. The old behavior can still be obtained with np.linspace(start,
stop,
│num).astype(int)
        Methods

Notes
Other ParametersParameters
               start : The starting value of the sequence.       stop : The end value
        of the sequence, unless endpoint is set to False. In that case, the sequence
        consists of all but the last of num + 1 evenly spaced samples, so that stop is
        excluded.  Note that the step size changes when endpoint is False.       num :
        Number of samples to generate. Default is 50. Must be non-negative.
        endpoint : If True, stop is the last sample. Otherwise, it is not included.
        Default is True.       retstep : If True, return (samples, step), where step is
        the spacing between samples.       dtype : The type of the output array.  If
        dtype is not given, the data type is inferred from start and stop. The inferred
        dtype will never be an integer; :None:None:`float`
         is chosen even if the arguments would produce an array of integers.

        │..  versionadded 1.9.0::
        │

               axis : The axis in the result to store the samples.  Relevant only if
        start or stop are array-like.  By default (0), the samples will be along a new
        axis inserted at the beginning. Use -1 to get an axis at the end.

        │..  versionadded 1.16.0::
        │Raises        Receives

Returns
               samples : There are num equally spaced samples in the closed interval
        [start, stop] or the half-open interval [start, stop) (depending on whether
        endpoint is True or False).       step : Only returned if retstep is TrueSize
        of spacing between samples.Summary
Return evenly spaced numbers over a specified interval.
        Warnings

WarnsYieldsSee Also
    arange(1227, <Link: self.value='arange' self.reference=RefInfo(module='current-module', version='current-version', kind='to-resolve', path='arange') self.kind='module' self.exists=True>?)
        Similar to :None:None:`linspace`
, but uses a step size (instead of the number of samples).
    geomspace(1227, <Link: self.value='geomspace' self.reference=RefInfo(module='current-module', version='current-version', kind='to-resolve', path='geomspace') self.kind='module' self.exists=True>?)
        Similar to :None:None:`linspace`
, but with numbers spaced evenly on a log scale (a geometric progression).
    how-to-partition(1227, <Link: self.value='how-to-partition' self.reference=RefInfo(module='current-module', version='current-version', kind='to-resolve', path='how-to-partition') self.kind='module' self.exists=True>?)
        ref
    logspace(1227, <Link: self.value='logspace' self.reference=RefInfo(module='current-module', version='current-version', kind='to-resolve', path='logspace') self.kind='module' self.exists=True>?)
        Similar to :None:None:`geomspace`
, but with the end points specified as logarithms.

